name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          mingw-w64 \
          autoconf \
          automake \
          autotools-dev \
          autopoint \
          libtool \
          pkg-config \
          mingw-w64-x86-64-dev \
          libc-ares-dev:amd64 \
          zlib1g-dev:amd64 \
          libsqlite3-dev:amd64 \
          libexpat1-dev:amd64 \
          libssh2-1-dev:amd64 \
          libcppunit-dev:amd64 \
          libgmp-dev \
          mingw-w64-x86-64-libgmp


    - name: Build and install dependent libraries
      run: |
        # 示例：这里应该包含构建和安装 c-ares, expat, sqlite3, zlib, libssh2, cppunit 的步骤
        # 由于实际构建这些库的步骤较为复杂，这里简化示例，假设已经有预编译的库
        # 可以根据实际情况补充完整构建和安装这些库的脚本
        echo "Building and installing dependent libraries..."

    - name: Set environment variables for 64-bit build
      run: |
        echo "HOST=x86_64-w64-mingw32" >> $GITHUB_ENV
        echo "PREFIX=/usr/local/\$HOST" >> $GITHUB_ENV
    - name: Generate configure script
      run: |
        autoreconf -i
    
    - name: Configure build using mingw-config
      run: |
        chmod +x mingw-config
        ./mingw-config
    - name: Build aria2
      run: |
        make -j"$(nproc 2> /dev/null || sysctl -n hw.ncpu)" check

    - name: Save build artifacts
      uses: actions/upload-artifact@v4
      with:
          name: Package
          path: mingw-out
